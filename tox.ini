[tox]
envlist = lint,format,licenses,security,docs,covclean,{py36,py37,py38,py39}-unittest,covreport
isolated_build = true
requires =
    poetry
    tox-poetry

[testenv]
passenv = HOME
sitepackages = false
commands =
    unittest: pytest -vv --cov --cov-append --cov-report= tests {posargs}
depends =
    {py36,py37,py38,py39}: covclean
    covreport: py36-unittest,py37-unittest,py38-unittest,py39-unittest

[testenv:covreport]
basepython = python3.9
deps = coverage[toml]
commands =
    -coverage html
    coverage report -m

[testenv:covclean]
deps = coverage[toml]
commands = coverage erase

[testenv:docs]
changedir = docs
deps = 
    sphinx
    sphinxcontrib-napoleon
whitelist_externals =
    mkdir
    rm
commands=
    mkdir -p _static
    rm -rf _build
    rm -rf _source
    sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:lint]
commands =
    flake8 {posargs}
    rstcheck -r docs

[testenv:format]
commands =
    black --check {posargs:.}
    isort --check {posargs:.}

[testenv:security]
commands =
    pip install --upgrade pip
    bandit -r spammish/ -x tests/ -ll
    safety check --full-report

[testenv:licenses]
commands =
    {toxinidir}/devel/run-liccheck.sh
    poetry install
    poetry export -f requirements.txt -o /tmp/spammish-requirements.txt
    poetry run liccheck -s .license_strategy.ini -r /tmp/spammish-requirements.txt
    rm -f /tmp/spammish-requirements.txt
whitelist_externals =
    rm


[flake8]
show-source = True
max-line-length = 100
exclude = .git,.tox,dist,*egg
